!<arch>
append_node.c/  0           0     0     644     1345      `
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   append_node.c                                      :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: anamedin <anamedin@student.42barcel>       +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2024/06/11 17:06:12 by anamedin          #+#    #+#             */
/*   Updated: 2024/06/12 17:22:02 by anamedin         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "push_swap.h"

static void	append_node(t_stack_node **stack, int n)
{
	t_stack_node	*node;
	t_stack_node	*last_node;

	if (!stack)
		return(NULL);
	node = malloc(sizeof(t_stack_node));
	if(!node)
		return;
	node->next = NULL;
	node ->nbr = n;

	if(!(*stack))  //tiene un valor asi que pasara al else 
	{
		*stack = node;
		node->prev = NULL;
	}
	else
	{
		last_node = find_last(*stack);
		last_node->next = node;
		node->prev = last_node;
	}
}

error.c/        0           0     0     644     1597      `
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   error.c                                            :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: anamedin <anamedin@student.42barcel>       +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2024/06/13 09:07:04 by anamedin          #+#    #+#             */
/*   Updated: 2024/06/13 10:18:49 by anamedin         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

void	error(t_stack_node **a, char **argv)
{
	exit(2);
}

int error_repeat(t_slack_node *a, int n)
{
	if (NULL == a)
		return (0);
	while (a)
	{
		if (a->value == n)
			return (1);
		a = a->next; 
	}
	return (0);
}

int error_syntax(char *str_n)
{
	//comprobar si NO es "+" o '-'
	if(!(*str_n == '+'
				|| *str_n == '-'
				|| (*str_n >= '0' && *str_n <= '9')))
		return (1); //si no ningun de esos retorna 1 inicando error de sintaxis
	if((*str_n == '+' 
				|| *str_n == '-')
			&& !(str_n[1] >= '0' && str_n[1] <= '9'))
			return (1);
	while(*++str_n) //pre-incremento, Incrementa el puntero (str_n) antes de usar su valor.
	{
		if ((str_n[1]>= '0' && *str_n <= '9'))
			return (1);
	}
	return (0);

}

ft_split.c/     0           0     0     644     2322      `
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_split.c                                         :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: anamedin <anamedin@student.42barcel>       +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2024/06/10 16:33:49 by anamedin          #+#    #+#             */
/*   Updated: 2024/06/11 12:11:35 by anamedin         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "push_swap.h"
#include <stddef.h>

static int	ft_wcount(const char *s, char separator)
{
	int	num_words;
	int i;

	num_words = 0;
	i = 0;
	while (s[i] != '\0')
	{
		while(s[i] == separator && s[i] != '\0')
			i++;
		if(s[i] != separator && s[i] != '\0')
			num_words++;
		while (s[i] != separator && s[i] != '\0')
			i++;
	}
	return(num_words);
}




static char	*get_next_word(char *str, char separator)
{
	static int	cursor = 0;
	char		*next_word;
	int			len;
	int			i;

	len = 0;
	i = 0;
	while(str[cursor] == separator)
		++cursor;
	while(((str[cursor + len]) != separator) && str[cursor + len])
		++len;
	next_word = malloc((size_t)len * sizeof(char) + 1);
	if(!next_word)
		return(NULL);
	while((str[cursor] != separator) && str[cursor])
		next_word[i++] = str[cursor++];
	next_word[i] = '\0';
	return(next_word);
}


char	**ft_split(char *str, char separator)
{
	int		words_number;
	char	**vector_strings;
	int		i;

	i = 0;
	words_number = ft_wcount(str, separator);
	if (!words_number)
		exit(1);
	vector_strings = malloc(sizeof(char *) * (size_t)(words_number + 2));
	if (!vector_strings)
		return (NULL);
	while (words_number-- >= 0)
	{
		if (i == 0)
		{
			vector_strings[i] = malloc(sizeof(char));
			if (!vector_strings[i])
				return (NULL);
			vector_strings[i++][0] = '\0';
			continue ;
		}
		vector_strings[i++] = get_next_word(str, separator);
	}
	vector_strings[i] = NULL;
	return (vector_strings);
}
main.c/         0           0     0     644     1236      `
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   main.c                                             :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: anamedin <anamedin@student.42barcel>       +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2024/06/11 12:44:54 by anamedin          #+#    #+#             */
/*   Updated: 2024/06/11 13:46:14 by anamedin         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <push_swap.h>

int main(int argc, char **argv)
{
  t_stack_node  *a;
  t_stack_node  *b;

  a = NULL;
  b = NULL;
  if (1 == argc || (2 == argc && !argv[1][0])) // pero el primer caracter de la entrada es cero: cadena vacia 
    return (1);
  else if (2 == argc)
    argv = ft_split(argv[1], ' ');
	stack_init(&a, argv + 1);
    



}
stack_init.c/   0           0     0     644     1662      `
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   stack_init.c                                       :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: anamedin <anamedin@student.42barcel>       +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2024/06/10 16:23:56 by anamedin          #+#    #+#             */
/*   Updated: 2024/06/13 10:17:24 by anamedin         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "push_swap.h"
#include <limits.h>
#include <stdlib.h>
#include <stdio.h>


static long	ft_atol(const char *str)
{
	long	num;
	int		isneg;
	int		i;

	num = 0;
	isneg = 1;
	i = 0;
	while (str[i] && (str[i] == ' ' || str[i] == '\t'
			|| str[i] == '\n' || str[i] == '\r'
			|| str[i] == '\v' || str[i] == '\f'))
		i++;
	if (str[i] == '+')
		i++;
	else if (str[i] == '-')
	{
		isneg *= -1;
		i++;
	}
	while (str[i] >= '0' && str[i] <= '9')
	{
		num = (num * 10) + (str[i] - '0');
		i++;
	}
	return (num * isneg);
}





void stack_init(t_stack_node **a, char **argv)
{
	long	nbr;
	int		i;

	i = 0;
	while(argv[i])
	{
		if (error_syntax(argv[i]))
			error_free(a,argv);
		nbr = ft_atol(argv[i]);
		if(nbr > INT_MAX || nbr < INT_MIN)
			error_free(a, argv);


	}
}


